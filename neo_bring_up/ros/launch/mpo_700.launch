<?xml version="1.0"?>
<launch>
	<group>

	<!--robot platform-->
		<!--base_drive_chain-->
		<include file="$(find neo_base_mpo_700)/ros/launch/cob_can_and_kinematics/cob_base_drive_chain.launch"/>
		<!--undercarriage_controll-->
		<include file="$(find neo_base_mpo_700)/ros/launch/cob_can_and_kinematics/cob_undercarriage_control.launch"/>
		<!--relayboard-->
		<include file="$(find neo_base_mpo_700)/ros/launch/serrelay/neo_relayboard.launch"/>

	<!--sensors-->
		<!--Sick S300 Front + Back-->
		<include file="$(find neo_base_mpo_700)/ros/launch/sick/sick_s300.launch"/>

		<!--Scan Unifier-->
		<include file="$(find neo_base_mpo_700)/ros/launch/sick/cob_scan_unifier.launch"/>
	
	<!--robot model>
	<param name="robot_description" command="$(find xacro)/xacro.py '$(find neo_robot_descriptions)/mpo_700/mpo_700.urdf'" />
	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen" >
		<param name="publish_frequency" type="double" value="50.0" />
	</node-->	
	
	<!--tf broadcaster-->
	<include file="$(find neo_base_mpo_700)/ros/launch/static_transform_pub/base_link_to_laserfront_tf_broadcaster.launch"/>
	<include file="$(find neo_base_mpo_700)/ros/launch/static_transform_pub/base_link_to_laserback_tf_broadcaster.launch"/>

	<!--teleoperation-->
	<include file="$(find neo_teleop)/ros/launch/teleop.launch"/>

	<!--auto_recover-->
	<include file="$(find neo_base_mpo_700)/ros/launch/auto_recover/auto_recover.launch"/>
	</group>
</launch>
